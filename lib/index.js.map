{"version":3,"sources":["../src/index.js"],"names":["FlickityComponent","props","state","selectedIndex","carousel","flkty","updateSelected","bind","imagesLoaded","index","setState","onSwipe","reloadOnUpdate","reloadCells","off","destroy","disableImagesLoaded","instance","options","on","initialize","createElement","elementType","className","ref","c","children","propTypes","bool","object","string","array","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;IAEMA,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,qBAAe;AADJ,KAAb;;AAIA,UAAKC,QAAL,GAAgB,IAAhB;AACA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAViB;AAWlB;;;;qCAEgB;AACf,UAAME,QAAQ,KAAKJ,KAAL,CAAWF,aAAzB;AACA,WAAKO,QAAL,CAAc;AACZP,uBAAeM;AADH,OAAd;AAGA,UAAI,KAAKR,KAAL,CAAWU,OAAf,EAAwB;AACtB,aAAKV,KAAL,CAAWU,OAAX,CAAmBF,KAAnB;AACD;AACF;;;yCAEoB;AACnB,UAAI,KAAKR,KAAL,CAAWW,cAAf,EAA+B;AAC7B,aAAKP,KAAL,CAAWQ,WAAX;AACD;AACF;;;2CAEsB;AACrB,UAAI,KAAKR,KAAT,EAAgB;AACd,aAAKA,KAAL,CAAWS,GAAX,CAAe,YAAf,EAA6B,KAAKR,cAAlC;AACA,aAAKD,KAAL,CAAWU,OAAX;AACD;AACF;;;mCAEc;AACb,UAAI,CAAC,KAAKd,KAAL,CAAWe,mBAAZ,mCAAJ,EAAkD;AAChD,oCACE,KAAKZ,QADP,EAEE,UAASa,QAAT,EAAmB;AACjB,eAAKZ,KAAL,CAAWQ,WAAX;AACD,SAFD,CAEEN,IAFF,CAEO,IAFP,CAFF;AAMD;AACF;;;wCAEmB;AAClB,UAAMH,WAAW,KAAKA,QAAtB;AACA,2CAAe;AACb,aAAKC,KAAL,GAAa,uBAAaD,QAAb,EAAuB,KAAKH,KAAL,CAAWiB,OAAlC,CAAb;AACA,aAAKb,KAAL,CAAWc,EAAX,CAAc,YAAd,EAA4B,KAAKb,cAAjC;AACA,aAAKE,YAAL;AACD;;AAED,UAAI,KAAKP,KAAL,CAAWmB,UAAf,EAA2B;AACzB,aAAKnB,KAAL,CAAWmB,UAAX,CAAsB,KAAKf,KAA3B;AACD;AACF;;;6BAEQ;AAAA;;AACP,aAAO,gBAAMgB,aAAN,CACL,KAAKpB,KAAL,CAAWqB,WADN,EAEL;AACEC,mBAAW,KAAKtB,KAAL,CAAWsB,SADxB;AAEEC,aAAK,gBAAK;AACR,iBAAKpB,QAAL,GAAgBqB,CAAhB;AACD;AAJH,OAFK,EAQL,KAAKxB,KAAL,CAAWyB,QARN,CAAP;AAUD;;;;;;AAGH1B,kBAAkB2B,SAAlB,GAA8B;AAC5BX,uBAAqB,oBAAUY,IADH;AAE5BhB,kBAAgB,oBAAUgB,IAFE;AAG5BV,WAAS,oBAAUW,MAHS;AAI5BN,aAAW,oBAAUO,MAJO;AAK5BR,eAAa,oBAAUQ,MALK;AAM5BJ,YAAU,oBAAUK,KANQ;AAO5BpB,WAAS,oBAAUqB,IAPS;AAQ5BZ,cAAY,oBAAUY;AARM,CAA9B;;AAWAhC,kBAAkBiC,YAAlB,GAAiC;AAC/BjB,uBAAqB,KADU;AAE/BJ,kBAAgB,KAFe;AAG/BM,WAAS,EAHsB;AAI/BK,aAAW,EAJoB;AAK/BD,eAAa;AALkB,CAAjC;;kBAQetB,iB","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport Flickity from 'flickity';\nimport imagesloaded from 'imagesloaded';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport PropTypes from 'prop-types';\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedIndex: 0,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n    this.updateSelected = this.updateSelected.bind(this);\n    this.imagesLoaded = this.imagesLoaded.bind(this);\n  }\n\n  updateSelected() {\n    const index = this.flkty.selectedIndex;\n    this.setState({\n      selectedIndex: index,\n    });\n    if (this.props.onSwipe) {\n      this.props.onSwipe(index);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.reloadOnUpdate) {\n      this.flkty.reloadCells();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.flkty) {\n      this.flkty.off('cellSelect', this.updateSelected);\n      this.flkty.destroy();\n    }\n  }\n\n  imagesLoaded() {\n    if (!this.props.disableImagesLoaded && canUseDOM) {\n      imagesloaded(\n        this.carousel,\n        function(instance) {\n          this.flkty.reloadCells();\n        }.bind(this)\n      );\n    }\n  }\n\n  componentDidMount() {\n    const carousel = this.carousel;\n    if (canUseDOM) {\n      this.flkty = new Flickity(carousel, this.props.options);\n      this.flkty.on('cellSelect', this.updateSelected);\n      this.imagesLoaded();\n    }\n\n    if (this.props.initialize) {\n      this.props.initialize(this.flkty);\n    }\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: c => {\n          this.carousel = c;\n        },\n      },\n      this.props.children\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  disableImagesLoaded: PropTypes.bool,\n  reloadOnUpdate: PropTypes.bool,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  elementType: PropTypes.string,\n  children: PropTypes.array,\n  onSwipe: PropTypes.func,\n  initialize: PropTypes.func,\n};\n\nFlickityComponent.defaultProps = {\n  disableImagesLoaded: false,\n  reloadOnUpdate: false,\n  options: {},\n  className: '',\n  elementType: 'div',\n};\n\nexport default FlickityComponent;\n"]}